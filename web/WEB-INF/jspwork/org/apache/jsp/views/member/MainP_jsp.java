/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-29 12:17:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class MainP_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\"  href=\"https://cdnjs.cloudflare.com/ajax/libs/lightslider/1.1.6/css/lightslider.min.css\"/>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/lightslider/1.1.6/js/lightslider.min.js\"></script>\r\n");
      out.write("<title>메인 페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write(".headbanner{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tmin-width:1100px;\r\n");
      out.write("\theight:700px;\r\n");
      out.write("\tbackground:lightgray;\r\n");
      out.write("\tmargin-top:110px;\r\n");
      out.write("\tpadding:0px;\r\n");
      out.write("\tbackground:url('");
      out.print(request.getContextPath());
      out.write("/images/banner.jpg') no-repeat;\r\n");
      out.write("\tbackground-size: cover; \r\n");
      out.write("\tbackground-repeat: no-repeat; \r\n");
      out.write("\tbackground-position: center;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\topacity:0.8;\r\n");
      out.write("}\r\n");
      out.write("#slideDiv{\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("\tmin-width:900px;\r\n");
      out.write("\twidth:900px;\r\n");
      out.write("\theight:450px;\r\n");
      out.write("\tbackground:white;\r\n");
      out.write("\tmargin-top:250px;\r\n");
      out.write("\tpadding:10px;\r\n");
      out.write("}\r\n");
      out.write("#galleryDiv{\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("\tmargin-top:200px;\r\n");
      out.write("}\r\n");
      out.write("ul{\r\n");
      out.write("    list-style: none outside none;\r\n");
      out.write("    padding-left: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("}\r\n");
      out.write(".slide-content .slide-content{\r\n");
      out.write("    margin-bottom: 60px;\r\n");
      out.write("}\r\n");
      out.write(".slider li{\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #FFF;\r\n");
      out.write("    background-size:cover;\r\n");
      out.write("    background-position: center;\r\n");
      out.write("}\r\n");
      out.write(".slider h3 {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 100px 0;\r\n");
      out.write("    height:250px;\r\n");
      out.write("}\r\n");
      out.write(".slide-content{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height:300px;\r\n");
      out.write("}\r\n");
      out.write(".item1{background-image:url('http://han3283.cafe24.com/images/apple.jpg');}\r\n");
      out.write(".item2{background-image:url('http://han3283.cafe24.com/images/cherry.jpg');}\r\n");
      out.write(".item3{background-image:url('http://han3283.cafe24.com/images/strawberry.jpg');}\r\n");
      out.write(".item4{background-image:url('http://han3283.cafe24.com/images/grape.jpg');}\r\n");
      out.write(".item5{background-image:url('http://han3283.cafe24.com/images/lemon.jpg');}\r\n");
      out.write(".item6{background-image:url('http://han3283.cafe24.com/images/grapefruit.jpg');}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"headbanner\">\r\n");
      out.write("\t\t<div id=\"slideDiv\">\r\n");
      out.write("\t\t\t<div class=\"slide-wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"slide-content\">\r\n");
      out.write("\t\t\t\t\t<ul id=\"slider\" class=\"slider\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item1\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>사과</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item2\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>체리</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item3\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>딸기</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item4\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>포도</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item5\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>레몬</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"item6\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3>자몽</h3>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\tslider();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction slider(){\r\n");
      out.write("\t\t\t$(\"#slider\").lightSlider({\r\n");
      out.write("\t\t\t\tmode : 'slide', // 이미지가 표시되는 형식 (fade / slide)\r\n");
      out.write("\t\t\t\tloop : true, // 무한반복 할 것인지\r\n");
      out.write("\t\t\t\tauto : true, // 자동 슬라이드\r\n");
      out.write("\t\t\t\tpager : false, // 페이지 표시\r\n");
      out.write("\t\t\t\tspeed : 1000, // 슬라이드 되는 속도\r\n");
      out.write("\t\t\t\tpause : 3000\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).mouseup(function(){\r\n");
      out.write("\t\t\tslider();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
