/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-25 08:59:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import LF.adminPage.model.vo.*;

public final class CustomerReportMana_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("LF.adminPage.model.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	ArrayList<CReportList> crList = (ArrayList)request.getAttribute("crList");
	PageInfo pi = (PageInfo)request.getAttribute("pi");

	int listCount = pi.getListCount();
	int currentPage = pi.getCurrentPage();
	int maxPage = pi.getMaxPage();
	int startPage = pi.getStartPage();
	int endPage = pi.getEndPage();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"/>\r\n");
      out.write(" <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write(" <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write(" <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".borderOut {\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tborder-radius:15px;\r\n");
      out.write("}\r\n");
      out.write(".divAlign {\r\n");
      out.write("\twidth:1100;\r\n");
      out.write("\tvertical-align:middle;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"divAlign\">\r\n");
      out.write("\t\t<div class=\"divAlign col\">\r\n");
      out.write("\t\t\t<form id=\"searchReForm\">\r\n");
      out.write("\t\t\t<label for=\"searchReport\">판매자 아이디 찾기</label>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"searchReport\">\r\n");
      out.write("\t\t\t<input type=\"button\" id=\"searchRe\" value=\"찾기\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"pagingScroll\" style=\"text-align:center; width:1000px;\">\r\n");
      out.write("\t\t\t");
 for(CReportList cr : crList) {
      out.write("\r\n");
      out.write("\t\t\t\t<form class=\"borderOut form-inline\" id=\"reportList");
      out.print(cr.getcRid() );
      out.write("\" style=\"align:center; margin:10px; \">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.print(cr.getSale_Id());
      out.write("\"> <!-- 구매 번호 -->\r\n");
      out.write("\t\t\t\t\t<table class=\"table table-borderless\"style=\"width: 1000px; min-width:1000px;\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>신고 번호</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50px\"><input class=\"form-control\" type=\"text\" value=\"");
      out.print(cr.getcRid() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>신고자 아이디</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50px\"><input class=\"form-control\" type=\"text\" value=\"");
      out.print(cr.getUserId() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><button type=\"button\" class=\"btn btn-primary\">상품으로 가기</button> \r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>상품명</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=2><input class=\"form-control\" type=\"text\" value=\"");
      out.print(cr.getpName() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>신고 날짜</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input class=\"form-control\" type=\"text\" value=\"");
      out.print(cr.getReport_Date() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>신고 내용</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=4><textarea rows=\"5\" cols=\"100\" readonly>");
      out.print(cr.getNoContent() );
      out.write("</textarea></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/selInfo.ad?currentPage=1'\"> << </button>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 이전 페이지로(<) -->\r\n");
      out.write("\t\t\t\t\t");
if(currentPage <= 1) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button disabled> < </button>\r\n");
      out.write("\t\t\t\t\t");
} else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/seInfo.ad?currentPage=");
      out.print(currentPage-1 );
      out.write("'\"> < </button>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 10개의 페이지 목록 -->\r\n");
      out.write("\t\t\t\t\t");
for(int p = startPage; p<=endPage; p++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
 if(p == currentPage){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<button disabled>");
      out.print(p );
      out.write("</button>\r\n");
      out.write("\t\t\t\t\t\t");
} else{
      out.write("\r\n");
      out.write("\t\t\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/seInfo.ad?currentPage=");
      out.print(p );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(p );
      out.write("</button>\r\n");
      out.write("\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 다음 페이지로(>) -->\r\n");
      out.write("\t\t\t\t\t");
if(currentPage >= maxPage){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button disabled> > </button>\r\n");
      out.write("\t\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/seInfo.ad?currentPage=");
      out.print(currentPage+1 );
      out.write("'\"> > </button>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 맨 끝으로(>>) -->\r\n");
      out.write("\t\t\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/seInfo.ad?currentPage=");
      out.print(maxPage );
      out.write("'\"> >> </button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
